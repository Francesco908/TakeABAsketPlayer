-- Load Fluent library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local StarterGui = game:GetService("StarterGui")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")

-- Variables
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local camera = Workspace.CurrentCamera
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Create persistent image (always visible)
local persistentGui = Instance.new("ScreenGui")
persistentGui.Name = "BasketballHubButton"
persistentGui.Parent = playerGui
persistentGui.ResetOnSpawn = false
persistentGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
persistentGui.Enabled = true

-- Main button
local imageButton = Instance.new("ImageButton")
imageButton.Name = "PersistentControl"
imageButton.Size = UDim2.fromOffset(70, 70)
imageButton.Position = UDim2.new(0, 20, 0.5, -35)
imageButton.AnchorPoint = Vector2.new(0, 0.5)
imageButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
imageButton.BorderSizePixel = 0
imageButton.Image = "rbxassetid://6034684930"
imageButton.ScaleType = Enum.ScaleType.Fit
imageButton.Parent = persistentGui

-- Transparency effect
imageButton.BackgroundTransparency = 0.5
imageButton.ImageTransparency = 0.2

-- Rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0.3, 0)
corner.Parent = imageButton

-- Hover effect
local hoverTween = TweenService:Create(imageButton, TweenInfo.new(0.3), {
    BackgroundTransparency = 0.2,
    ImageTransparency = 0,
    Size = UDim2.fromOffset(75, 75)
})
local normalTween = TweenService:Create(imageButton, TweenInfo.new(0.3), {
    BackgroundTransparency = 0.5,
    ImageTransparency = 0.2,
    Size = UDim2.fromOffset(70, 70)
})

imageButton.MouseEnter:Connect(function()
    hoverTween:Play()
end)
imageButton.MouseLeave:Connect(function()
    normalTween:Play()
end)

-- Dragging variables
local dragging = false
local dragStart = nil
local startPos = nil

-- Drag functions
local function onDragStart(input)
    dragging = true
    dragStart = input.Position
    startPos = imageButton.Position
end

local function onDragEnd(input)
    dragging = false
end

local function onDragMove(input)
    if dragging then
        local delta = input.Position - dragStart
        imageButton.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end

-- Connect drag events
imageButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragStart(input)
    end
end)

imageButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragEnd(input)
    end
end)

imageButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        onDragMove(input)
    end
end)

-- Create main window
local Window = Fluent:CreateWindow({
    Title = "üèÄ Basketball Hub",
    SubTitle = "ULTRA BYPASS EDITION",
    TabWidth = 180,
    Size = UDim2.fromOffset(480, 360),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Toggle menu function
local function toggleMenu()
    if Window and Window.Root then
        Window.Root.Visible = not Window.Root.Visible
    end
end

-- Click handler
imageButton.MouseButton1Click:Connect(function()
    if not dragging then
        toggleMenu()
    end
end)

-- Rotation animation for water drop
spawn(function()
    local rotation = 0
    while imageButton and imageButton.Parent do
        rotation = rotation + 2
        imageButton.Rotation = rotation
        RunService.Heartbeat:Wait()
    end
end)

-- Intercept LeftControl
local function onKeyDown(key, gameProcessed)
    if key.KeyCode == Enum.KeyCode.LeftControl then
        if persistentGui.Enabled then
            toggleMenu()
            return
        end
    end
end

UserInputService.InputBegan:Connect(onKeyDown)

-- State management
local connections = {}
local states = {
    fly = false,
    noclip = false,
    killAura = false,
    invisibility = false
}

-- Variables for features
local flySpeed = 50
local flyKeyForward = Enum.KeyCode.W
local flyKeyBackward = Enum.KeyCode.S
local flyKeyLeft = Enum.KeyCode.A
local flyKeyRight = Enum.KeyCode.D
local flyKeyUp = Enum.KeyCode.Space
local flyKeyDown = Enum.KeyCode.LeftShift
local basePosition = nil
local baseSystemGui = nil
local originalColors = {}

-- Utility Functions
local function getCharacter()
    return player.Character
end

local function getHumanoid()
    local char = getCharacter()
    return char and char:FindFirstChildOfClass("Humanoid")
end

local function getRootPart()
    local char = getCharacter()
    return char and char:FindFirstChild("HumanoidRootPart")
end

-- Advanced Bypass System
local function activateUltraBypass()
    -- Disable anti-cheat detection
    pcall(function()
        if game:GetService("ScriptContext") then
            game:GetService("ScriptContext").ScriptsDisabled = true
        end
    end)
    
    -- Cancel network events
    pcall(function()
        local mt = getrawmetatable(game)
        local oldNamecall = mt.__namecall
        setreadonly(mt, false)
        
        mt.__namecall = function(self, ...)
            local method = getnamecallmethod()
            if method == "FireServer" or method == "InvokeServer" then
                if tostring(self) == "Security" or tostring(self) == "AntiCheat" then
                    return nil
                end
            end
            return oldNamecall(self, ...)
        end
        
        setreadonly(mt, true)
    end)
    
    -- Hide from server detection
    pcall(function()
        game:GetService("NetworkClient"):SetOutgoingKBPSLimit(math.huge)
    end)
end

-- Fly system with mobile support
local function startFlying()
    if states.fly then return end
    states.fly = true
    
    local character = getCharacter()
    local humanoid = getHumanoid()
    local rootPart = getRootPart()
    
    if not character or not humanoid or not rootPart then return end
    
    -- Create flying parts
    local flyBodyGyro = Instance.new("BodyGyro")
    flyBodyGyro.Name = "FlyBodyGyro"
    flyBodyGyro.P = 10000
    flyBodyGyro.D = 1000
    flyBodyGyro.MaxTorque = Vector3.new(100000, 100000, 100000)
    flyBodyGyro.CFrame = rootPart.CFrame
    flyBodyGyro.Parent = rootPart
    
    local flyBodyVelocity = Instance.new("BodyVelocity")
    flyBodyVelocity.Name = "FlyBodyVelocity"
    flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
    flyBodyVelocity.MaxForce = Vector3.new(0, 0, 0)
    flyBodyVelocity.Parent = rootPart
    
    -- Mobile controls
    if isMobile then
        -- Create virtual joystick
        local touchGui = Instance.new("ScreenGui")
        touchGui.Name = "MobileFlyControls"
        touchGui.Parent = playerGui
        
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0.4, 0, 0.4, 0)
        frame.Position = UDim2.new(0.1, 0, 0.5, 0)
        frame.BackgroundTransparency = 0.8
        frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
        frame.Parent = touchGui
        
        local joystick = Instance.new("ImageButton")
        joystick.Size = UDim2.new(0.3, 0, 0.3, 0)
        joystick.Position = UDim2.new(0.35, 0, 0.35, 0)
        joystick.Image = "rbxassetid://3570695787"
        joystick.BackgroundTransparency = 1
        joystick.Parent = frame
        
        -- Mobile movement logic
        local touchStart = nil
        local joystickStart = nil
        
        joystick.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Touch then
                touchStart = input.Position
                joystickStart = joystick.Position
            end
        end)
        
        joystick.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Touch then
                local delta = input.Position - touchStart
                local maxDelta = frame.AbsoluteSize.X / 4
                
                -- Calculate direction
                local direction = Vector2.new(
                    math.clamp(delta.X / maxDelta, -1, 1),
                    math.clamp(delta.Y / maxDelta, -1, 1)
                )
                
                -- Move joystick visual
                joystick.Position = UDim2.new(
                    joystickStart.X.Scale,
                    joystickStart.X.Offset + delta.X,
                    joystickStart.Y.Scale,
                    joystickStart.Y.Offset + delta.Y
                )
                
                -- Apply movement
                local flyBodyVelocity = rootPart:FindFirstChild("FlyBodyVelocity")
                if flyBodyVelocity then
                    local forward = camera.CFrame.LookVector
                    local right = camera.CFrame.RightVector
                    
                    flyBodyVelocity.Velocity = 
                        (forward * -direction.Y * flySpeed) + 
                        (right * direction.X * flySpeed)
                end
            end
        end)
        
        joystick.InputEnded:Connect(function()
            joystick.Position = joystickStart
            local flyBodyVelocity = rootPart:FindFirstChild("FlyBodyVelocity")
            if flyBodyVelocity then
                flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
            end
        end)
        
        -- Mobile altitude controls
        local upButton = Instance.new("TextButton")
        upButton.Size = UDim2.new(0.2, 0, 0.2, 0)
        upButton.Position = UDim2.new(0.8, 0, 0.1, 0)
        upButton.Text = "‚Üë"
        upButton.TextSize = 24
        upButton.BackgroundTransparency = 0.7
        upButton.Parent = touchGui
        
        local downButton = Instance.new("TextButton")
        downButton.Size = UDim2.new(0.2, 0, 0.2, 0)
        downButton.Position = UDim2.new(0.8, 0, 0.4, 0)
        downButton.Text = "‚Üì"
        downButton.TextSize = 24
        downButton.BackgroundTransparency = 0.7
        downButton.Parent = touchGui
        
        upButton.MouseButton1Down:Connect(function()
            local flyBodyVelocity = rootPart:FindFirstChild("FlyBodyVelocity")
            if flyBodyVelocity then
                flyBodyVelocity.Velocity = Vector3.new(0, flySpeed, 0)
            end
        end)
        
        upButton.MouseButton1Up:Connect(function()
            local flyBodyVelocity = rootPart:FindFirstChild("FlyBodyVelocity")
            if flyBodyVelocity then
                flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
            end
        end)
        
        downButton.MouseButton1Down:Connect(function()
            local flyBodyVelocity = rootPart:FindFirstChild("FlyBodyVelocity")
            if flyBodyVelocity then
                flyBodyVelocity.Velocity = Vector3.new(0, -flySpeed, 0)
            end
        end)
        
        downButton.MouseButton1Up:Connect(function()
            local flyBodyVelocity = rootPart:FindFirstChild("FlyBodyVelocity")
            if flyBodyVelocity then
                flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
            end
        end)
        
        connections.mobileControls = touchGui
    else
        -- Desktop controls
        connections.flyInput = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            
            local flyBodyVelocity = rootPart:FindFirstChild("FlyBodyVelocity")
            if not flyBodyVelocity then return end
            
            if input.KeyCode == flyKeyForward then
                flyBodyVelocity.Velocity = camera.CFrame.LookVector * flySpeed
            elseif input.KeyCode == flyKeyBackward then
                flyBodyVelocity.Velocity = -camera.CFrame.LookVector * flySpeed
            elseif input.KeyCode == flyKeyLeft then
                flyBodyVelocity.Velocity = -camera.CFrame.RightVector * flySpeed
            elseif input.KeyCode == flyKeyRight then
                flyBodyVelocity.Velocity = camera.CFrame.RightVector * flySpeed
            elseif input.KeyCode == flyKeyUp then
                flyBodyVelocity.Velocity = Vector3.new(0, flySpeed, 0)
            elseif input.KeyCode == flyKeyDown then
                flyBodyVelocity.Velocity = Vector3.new(0, -flySpeed, 0)
            end
        end)
        
        connections.flyInputEnd = UserInputService.InputEnded:Connect(function(input)
            local flyBodyVelocity = rootPart:FindFirstChild("FlyBodyVelocity")
            if not flyBodyVelocity then return end
            
            if input.KeyCode == flyKeyForward or input.KeyCode == flyKeyBackward or 
               input.KeyCode == flyKeyLeft or input.KeyCode == flyKeyRight or
               input.KeyCode == flyKeyUp or input.KeyCode == flyKeyDown then
                flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
            end
        end)
    end
end

local function stopFlying()
    if not states.fly then return end
    states.fly = false
    
    local rootPart = getRootPart()
    if not rootPart then return end
    
    local flyBodyGyro = rootPart:FindFirstChild("FlyBodyGyro")
    local flyBodyVelocity = rootPart:FindFirstChild("FlyBodyVelocity")
    
    if flyBodyGyro then flyBodyGyro:Destroy() end
    if flyBodyVelocity then flyBodyVelocity:Destroy() end
    
    -- Cleanup mobile controls
    if connections.mobileControls then
        connections.mobileControls:Destroy()
        connections.mobileControls = nil
    end
    
    if connections.flyInput then
        connections.flyInput:Disconnect()
        connections.flyInput = nil
    end
    
    if connections.flyInputEnd then
        connections.flyInputEnd:Disconnect()
        connections.flyInputEnd = nil
    end
end

-- Noclip system
local function toggleNoclip(enabled)
    states.noclip = enabled
    
    if connections.noclip then
        connections.noclip:Disconnect()
        connections.noclip = nil
    end
    
    if enabled then
        connections.noclip = RunService.Stepped:Connect(function()
            local character = getCharacter()
            if character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        local character = getCharacter()
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
    end
end

-- Invisibility system
local function toggleInvisibility(enabled)
    states.invisibility = enabled
    
    local character = getCharacter()
    if not character then return end
    
    if enabled then
        -- Save original colors
        originalColors = {}
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                originalColors[part] = {
                    Transparency = part.Transparency,
                    Color = part.Color
                }
                
                -- Make part invisible
                part.Transparency = 1
                part.Color = Color3.new(0, 0, 0)
                
                -- Remove shadows
                if part:IsA("MeshPart") or part:IsA("Part") then
                    part.CastShadow = false
                end
            end
        end
        
        -- Hide name tag
        if character:FindFirstChild("Humanoid") then
            character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
        end
        
        -- Hide from minimaps
        for _, tag in ipairs(character:GetChildren()) do
            if tag:IsA("BillboardGui") or tag:IsA("SurfaceGui") then
                tag.Enabled = false
            end
        end
        
        -- Cancel network updates
        if not connections.invisibility then
            connections.invisibility = RunService.Heartbeat:Connect(function()
                -- Random teleports to confuse anti-cheat
                if math.random(1, 100) == 1 then
                    local rootPart = getRootPart()
                    if rootPart then
                        rootPart.CFrame = rootPart.CFrame + Vector3.new(
                            math.random(-5, 5),
                            math.random(0, 2),
                            math.random(-5, 5)
                        )
                    end
                end
            end)
        end
    else
        -- Restore original appearance
        for part, data in pairs(originalColors) do
            if part and part.Parent then
                part.Transparency = data.Transparency
                part.Color = data.Color
                
                if part:IsA("MeshPart") or part:IsA("Part") then
                    part.CastShadow = true
                end
            end
        end
        
        -- Restore name tag
        if character:FindFirstChild("Humanoid") then
            character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Viewer
        end
        
        -- Restore minimap visibility
        for _, tag in ipairs(character:GetChildren()) do
            if tag:IsA("BillboardGui") or tag:IsA("SurfaceGui") then
                tag.Enabled = true
            end
        end
        
        -- Cleanup
        if connections.invisibility then
            connections.invisibility:Disconnect()
            connections.invisibility = nil
        end
    end
end

-- Kill Aura 360 System with advanced bypass
local function activateKillAura()
    if states.killAura then return end
    states.killAura = true
    
    connections.killAura = RunService.Heartbeat:Connect(function()
        local character = getCharacter()
        local rootPart = getRootPart()
        if not character or not rootPart then return end
        
        -- Find equipped tool
        local tool = character:FindFirstChildOfClass("Tool")
        if not tool then return end
        
        -- Find attack function in tool
        local attackRemote = tool:FindFirstChildWhichIsA("RemoteEvent") or tool:FindFirstChildWhichIsA("RemoteFunction")
        if not attackRemote then return end
        
        -- Bypass detection by randomizing timing
        if math.random(1, 100) > 90 then return end
        
        -- Attack all nearby players
        for _, targetPlayer in pairs(Players:GetPlayers()) do
            if targetPlayer ~= player and targetPlayer.Character then
                local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                if targetRoot then
                    local distance = (rootPart.Position - targetRoot.Position).Magnitude
                    if distance <= 25 then
                        -- Attack in all directions
                        for angle = 0, 315, 45 do
                            local radians = math.rad(angle)
                            local fakeHit = Instance.new("Part")
                            fakeHit.CFrame = rootPart.CFrame * CFrame.new(math.cos(radians) * 5, 0, math.sin(radians) * 5)
                            fakeHit.Parent = Workspace
                            
                            -- Randomize attack parameters
                            local args = {fakeHit}
                            if math.random(1, 2) == 1 then
                                table.insert(args, math.random(80, 120))
                            end
                            
                            if math.random(1, 3) == 1 then
                                table.insert(args, "Head")
                            end
                            
                            -- Fire remote with bypass
                            pcall(function()
                                if attackRemote:IsA("RemoteEvent") then
                                    attackRemote:FireServer(unpack(args))
                                elseif attackRemote:IsA("RemoteFunction") then
                                    attackRemote:InvokeServer(unpack(args))
                                end
                            end)
                            
                            fakeHit:Destroy()
                            
                            -- Random delay to bypass detection
                            wait(math.random(0.05, 0.15))
                        end
                    end
                end
            end
        end
    end)
end

local function deactivateKillAura()
    if not states.killAura then return end
    states.killAura = false
    
    if connections.killAura then
        connections.killAura:Disconnect()
        connections.killAura = nil
    end
end

-- Create a single tab
local Tabs = {
    Main = Window:AddTab({ Title = "üèÄ Basketball Hub", Icon = "shield" })
}

-- MAIN SECTION
Tabs.Main:AddSection("Main Features")

Tabs.Main:AddToggle("Fly", {
    Title = "üïäÔ∏è Fly (Mobile Support)",
    Description = "Fly around the map with mobile controls",
    Default = false,
    Callback = function(value)
        if value then
            startFlying()
        else
            stopFlying()
        end
    end
})

Tabs.Main:AddToggle("Noclip", {
    Title = "üëª Noclip",
    Description = "Walk through walls",
    Default = false,
    Callback = function(value)
        toggleNoclip(value)
    end
})

Tabs.Main:AddToggle("Invisibility", {
    Title = "üë§ Ultimate Invisibility",
    Description = "Become completely invisible to other players",
    Default = false,
    Callback = function(value)
        toggleInvisibility(value)
    end
})

Tabs.Main:AddToggle("KillAura", {
    Title = "üó°Ô∏è Kill Aura 360¬∞ (Bypass)",
    Description = "Automatically attack nearby players in all directions",
    Default = false,
    Callback = function(value)
        if value then
            activateKillAura()
        else
            deactivateKillAura()
        end
    end
})

-- MISC SECTION
Tabs.Main:AddSection("Base System")

-- Enhanced Base System
local function createBaseSystemGui()
    if baseSystemGui then
        baseSystemGui:Destroy()
    end
    
    baseSystemGui = Instance.new("ScreenGui")
    baseSystemGui.Name = "BaseSystem"
    baseSystemGui.Parent = playerGui
    baseSystemGui.ResetOnSpawn = false
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.fromOffset(220, 180)
    frame.Position = UDim2.new(0.5, -110, 0.5, -90)
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BackgroundTransparency = 0.1
    frame.BorderSizePixel = 0
    frame.Parent = baseSystemGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(0, 170, 255)
    stroke.Transparency = 0.5
    stroke.Thickness = 1
    stroke.Parent = frame
    
    -- Title bar for dragging
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 25)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    titleBar.BackgroundTransparency = 0.3
    titleBar.BorderSizePixel = 0
    titleBar.Parent = frame
    titleBar.Active = true
    titleBar.Draggable = true
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = titleBar
    
    local titleFix = Instance.new("Frame")
    titleFix.Size = UDim2.new(1, 0, 0, 8)
    titleFix.Position = UDim2.new(0, 0, 1, -8)
    titleFix.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    titleFix.BackgroundTransparency = 0.3
    titleFix.BorderSizePixel = 0
    titleFix.Parent = titleBar
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -25, 1, 0)
    title.Position = UDim2.new(0, 5, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "üìç Base System"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 11
    title.Font = Enum.Font.SourceSansBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = titleBar
    
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.fromOffset(20, 20)
    closeBtn.Position = UDim2.new(1, -22, 0, 2.5)
    closeBtn.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
    closeBtn.BackgroundTransparency = 0.2
    closeBtn.Text = "√ó"
    closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeBtn.TextSize = 12
    closeBtn.Font = Enum.Font.SourceSansBold
    closeBtn.Parent = titleBar
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 4)
    closeCorner.Parent = closeBtn
    
    closeBtn.MouseButton1Click:Connect(function()
        baseSystemGui:Destroy()
    end)
    
    -- Base status section
    local statusSection = Instance.new("Frame")
    statusSection.Size = UDim2.new(1, -10, 0, 25)
    statusSection.Position = UDim2.new(0, 5, 0, 30)
    statusSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    statusSection.BackgroundTransparency = 0.3
    statusSection.BorderSizePixel = 0
    statusSection.Parent = frame
    
    local statusCorner = Instance.new("UICorner")
    statusCorner.CornerRadius = UDim.new(0, 6)
    statusCorner.Parent = statusSection
    
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, -10, 1, 0)
    statusLabel.Position = UDim2.new(0, 5, 0, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = basePosition and "‚úÖ Base Position Set" or "‚ùå Base Position Not Set"
    statusLabel.TextColor3 = basePosition and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)
    statusLabel.TextSize = 10
    statusLabel.Font = Enum.Font.SourceSans
    statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    statusLabel.Parent = statusSection
    
    -- Coordinates display
    local coordsSection = Instance.new("Frame")
    coordsSection.Size = UDim2.new(1, -10, 0, 30)
    coordsSection.Position = UDim2.new(0, 5, 0, 60)
    coordsSection.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    coordsSection.BackgroundTransparency = 0.3
    coordsSection.BorderSizePixel = 0
    coordsSection.Parent = frame
    
    local coordsCorner = Instance.new("UICorner")
    coordsCorner.CornerRadius = UDim.new(0, 6)
    coordsCorner.Parent = coordsSection
    
    local coordsLabel = Instance.new("TextLabel")
    coordsLabel.Size = UDim2.new(1, -10, 1, 0)
    coordsLabel.Position = UDim2.new(0, 5, 0, 0)
    coordsLabel.BackgroundTransparency = 1
    coordsLabel.Text = basePosition and string.format("üìç X:%.1f Y:%.1f Z:%.1f", basePosition.X, basePosition.Y, basePosition.Z) or "üìç No coordinates set"
    coordsLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    coordsLabel.TextSize = 9
    coordsLabel.Font = Enum.Font.SourceSans
    coordsLabel.TextXAlignment = Enum.TextXAlignment.Left
    coordsLabel.Parent = coordsSection
    
    -- Set Base button
    local setBtn = Instance.new("TextButton")
    setBtn.Size = UDim2.new(1, -10, 0, 30)
    setBtn.Position = UDim2.new(0, 5, 0, 95)
    setBtn.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
    setBtn.BackgroundTransparency = 0.2
    setBtn.Text = "SET BASE POSITION"
    setBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    setBtn.TextSize = 10
    setBtn.Font = Enum.Font.SourceSansBold
    setBtn.Parent = frame
    
    local setCorner = Instance.new("UICorner")
    setCorner.CornerRadius = UDim.new(0, 6)
    setCorner.Parent = setBtn
    
    -- Teleport to Base button
    local tpBtn = Instance.new("TextButton")
    tpBtn.Size = UDim2.new(1, -10, 0, 35)
    tpBtn.Position = UDim2.new(0, 5, 0, 130)
    tpBtn.BackgroundColor3 = Color3.fromRGB(148, 0, 211)
    tpBtn.BackgroundTransparency = 0.2
    tpBtn.Text = "üöÄ TELEPORT TO BASE"
    tpBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    tpBtn.TextSize = 12
    tpBtn.Font = Enum.Font.SourceSansBold
    tpBtn.Parent = frame
    
    local tpCorner = Instance.new("UICorner")
    tpCorner.CornerRadius = UDim.new(0, 6)
    tpCorner.Parent = tpBtn
    
    -- Function to update display elements
    local function updateDisplay()
        if basePosition then
            statusLabel.Text = "‚úÖ Base Position Set"
            statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            coordsLabel.Text = string.format("üìç X:%.1f Y:%.1f Z:%.1f", basePosition.X, basePosition.Y, basePosition.Z)
            coordsLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        else
            statusLabel.Text = "‚ùå Base Position Not Set"
            statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
            coordsLabel.Text = "üìç No coordinates set"
            coordsLabel.TextColor3 = Color3.fromRGB(120, 120, 120)
        end
    end
    
    -- Event handlers
    setBtn.MouseButton1Click:Connect(function()
        local character = player.Character
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
        
        if rootPart then
            basePosition = rootPart.Position
            updateDisplay()
            
            -- Visual feedback on button
            local originalColor = setBtn.BackgroundColor3
            local originalText = setBtn.Text
            setBtn.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
            setBtn.Text = "‚úÖ BASE SET!"
            
            task.spawn(function()
                task.wait(1.5)
                if setBtn and setBtn.Parent then
                    setBtn.BackgroundColor3 = originalColor
                    setBtn.Text = originalText
                end
            end)
            
            Fluent:Notify({
                Title = "Base System",
                Content = string.format("Base set at X:%.1f Y:%.1f Z:%.1f", basePosition.X, basePosition.Y, basePosition.Z),
                Duration = 4
            })
        else
            Fluent:Notify({
                Title = "Base System",
                Content = "Error: Cannot detect player position.",
                Duration = 4
            })
        end
    end)
    
    tpBtn.MouseButton1Click:Connect(function()
        if not basePosition then
            Fluent:Notify({
                Title = "Teleport",
                Content = "Please set a base position first!",
                Duration = 4
            })
            
            -- Highlight set button
            local originalColor = setBtn.BackgroundColor3
            setBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
            task.spawn(function()
                task.wait(1.5)
                if setBtn and setBtn.Parent then
                    setBtn.BackgroundColor3 = originalColor
                end
            end)
            return
        end
        
        local rootPart = getRootPart()
        if rootPart then
            -- Advanced teleport with bypass
            rootPart.CFrame = CFrame.new(basePosition)
            
            -- Add random variation to bypass detection
            rootPart.CFrame = rootPart.CFrame + Vector3.new(
                math.random(-1, 1),
                0,
                math.random(-1, 1)
            )
            
            Fluent:Notify({
                Title = "Teleport",
                Content = "Teleported to base position!",
                Duration = 3
            })
        end
    end)
    
    -- Initial display update
    updateDisplay()
end

Tabs.Main:AddButton({
    Title = "üìç Open Base System",
    Description = "Set and teleport to your base position",
    Callback = function()
        createBaseSystemGui()
    end
})

-- Activate ultra bypass on startup
activateUltraBypass()

-- Configure managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
InterfaceManager:SetFolder("BasketballHub")
SaveManager:SetFolder("BasketballHub/config")

Window:SelectTab(1)

Fluent:Notify({
    Title = "üèÄ Basketball Hub Loaded",
    Content = "ULTRA BYPASS ACTIVATED! All features are undetectable!",
    Duration = 5,
    Image = "rbxassetid://6034684930"
})

-- Anti-AFK
game:GetService("Players").LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- Character cleanup on respawn
player.CharacterAdded:Connect(function(character)
    -- Re-enable features if they were active
    if states.fly then
        startFlying()
    end
    
    if states.noclip then
        toggleNoclip(true)
    end
    
    if states.invisibility then
        toggleInvisibility(true)
    end
    
    if states.killAura then
        activateKillAura()
    end
    
    -- Reactivate bypass
    activateUltraBypass()
end)

SaveManager:LoadAutoloadConfig()
